<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache | 대체로 무해함</title>
    <link>/tags/apache/</link>
      <atom:link href="/tags/apache/index.xml" rel="self" type="application/rss+xml" />
    <description>Apache</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ko-kr</language><copyright>© lethean</copyright><lastBuildDate>Fri, 20 Jan 2006 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Apache</title>
      <link>/tags/apache/</link>
    </image>
    
    <item>
      <title>APR(Apache Portable Runtime)</title>
      <link>/2006/01/20/2006-01-20-aprapache-portable-runtime/</link>
      <pubDate>Fri, 20 Jan 2006 00:00:00 +0000</pubDate>
      <guid>/2006/01/20/2006-01-20-aprapache-portable-runtime/</guid>
      <description>&lt;p&gt;크로스 플랫폼 어플리케이션 개발을 위해 지금까지 많은 라이브러리를 검토했지만 대부분 아쉬운 점이 많았다. 덩치가 너무 크거나, 의존하는 라이브러리가 너무 많거나, 반대로 너무 기능이 제한적이고 부족하거나 하는 이유로 진행하는 프로젝트에서는 직접 만들어 사용하고 있는 실정이다.&lt;/p&gt;
&lt;p&gt;오늘 문득 
&lt;a href=&#34;http://httpd.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache2&lt;/a&gt;
 웹서버와 
&lt;a href=&#34;http://subversion.tigris.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Subversion&lt;/a&gt;
 버전 관리 소프트웨어가 사용하는 
&lt;a href=&#34;http://apr.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;APR&lt;/a&gt;
(Apache Portable Runtime) 라이브러리를 살펴보게 되었다. 그 존재는 Subversion을 사용하기 시작하면서부터 알고 있었으나 사이트를 들어가서 검토까지 해본 건 이번이 처음이다. 튼튼한 네트워크 서버를 만들면서 구축한 라이브러리의 특성을 한눈에 확인할 수 있다. 프로세스, 쓰레드, 시그널, MMAP, 메모리 관리, 공유 메모리 등과 같은 부분의 API가 정교하게 다듬어져 있다.&lt;/p&gt;
&lt;p&gt;하지만 아직까지는 
&lt;a href=&#34;http://www.gtk.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GLib&lt;/a&gt;
에게 더 높은 점수를 주고 싶다. GObject까지는 필요 없더라도 GLib 자체는 충분히 안정화되어 가고 있다. 초기 버전에 비해 Win32 지원이 날이 갈수록 좋아지는 걸 확인하고 있다. GLib에서 가장 좋아하는 부분은 메인 이벤트 루프를 지원한다는 점이다.(물론 가장 까다로운 부분이라 고생하는 부분이기도 하다)&lt;/p&gt;
&lt;p&gt;GLib과 APR을 대충 비교하면, GLib과 겹치는 부분도 있지만 없는 부분도 많다. 물론 GLib에만 있는 부분이 더 많다. 그리고 APR은 아직도 너무 치열하게 개발중이다. 즉, GLib은 이미 API가 안정화 단계에 있는데 APR은 아직도 활발하게 API가 변경되고 있다.&lt;/p&gt;
&lt;p&gt;지금 당장 프로젝트에 도입할 수는 없지만, 몇 개월 뒤에는 또 어떻게 발전해 있을까 궁금해진다.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
